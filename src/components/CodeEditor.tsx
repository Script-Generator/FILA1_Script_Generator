import CodeMirror from '@uiw/react-codemirror';
import { StreamLanguage } from '@codemirror/language';
import { shell } from '@codemirror/legacy-modes/mode/shell';
import { useState, useCallback } from 'react';
import { Button } from '@/components/ui/button.tsx';
import { githubDark, githubLight } from '@uiw/codemirror-theme-github';
import { useTheme } from '@/components/theme-provider';

const CodeEditor = () => {
  const [value, setValue] = useState(`#!/bin/bash

# Display a welcome message
echo "Welcome to the Bash script!"

# Prompt the user to enter a number
read -p "Please enter a number: " number

# Check if the number is even or odd
if (( number % 2 == 0 )); then
echo "The number $number is even."
else
echo "The number $number is odd."
fi

# Create a file and write to it
file="output.txt"
echo "This file was generated by the Bash script." > $file
echo "The entered number is $number." >> $file

# Read the file content and display it
echo "Content of the file $file:"
cat $file

# End of script
echo "Script finished."






















































  `);

  const { theme } = useTheme();

  const onChange = useCallback((val: string) => {
    console.log('val:', val);
    setValue(val);
  }, []);

  const isDarkMode =
    theme === 'dark' || (theme === 'system' && window.matchMedia('(prefers-color-scheme: dark)').matches);

  return (
    <div className="p-8 flex flex-col w-full">
      <CodeMirror
        className="text-left p-6 flex-grow overflow-scroll"
        value={value}
        extensions={[StreamLanguage.define(shell)]}
        onChange={onChange}
        theme={isDarkMode ? githubDark : githubLight}
        basicSetup={{
          lineNumbers: true,
          tabSize: 4,
        }}
      />
      <div className="mt-4 p-8 flex-grow align self-end">
        <Button className="">Export</Button>
      </div>
    </div>
  );
};

export default CodeEditor;
